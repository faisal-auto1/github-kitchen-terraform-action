name: "tf_action_from_comment"

on:
  issue_comment:
    types:
      - created

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

jobs:
  comment:
    name: read_comment
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.extract.outputs.action }}
      workspace: ${{ steps.extract.outputs.workspace }}
      tfdir: ${{ steps.extract.outputs.tfdir }}

    steps:
      - name: Read comment
        id: extract
        run: |
          body=$(echo "${{ github.event.comment.body }}")
          action=$(echo "${{ github.event.comment.body }}" | awk '{print $1}')
          workspace=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          tfdir=$(echo "${{ github.event.comment.body }}" | awk '{print $3}')

          echo "action=$action" >> "$GITHUB_OUTPUT"
          echo "workspace=$workspace" >> "$GITHUB_OUTPUT"
          echo "tfdir=$tfdir" >> "$GITHUB_OUTPUT"

      - name: check step output
        run: |
          echo "First argument: ${{ steps.extract.outputs.action }}"
          echo "Second argument: ${{ steps.extract.outputs.workspace }}"
          echo "Third argument: ${{ steps.extract.outputs.tfdir }}"

  tfplan:
    needs: comment
    runs-on: ubuntu-latest
    name: "tf_action"
    defaults:
      run:
        working-directory: ${{ needs.comment.outputs.tfdir }}
    steps:

      - uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Extract Pull Request Number
        id: extract_pr_number
        run: |
          npm install @actions/github
          echo "::set-output name=PR_NUMBER::$(jq -r '.issue.number' $GITHUB_EVENT_PATH)"

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@v1
        id: job_url
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: tf_action

      - name: Plan
        id: plan
        run: |
          set +e
          export TF_WORKSPACE=${{ needs.comment.outputs.workspace }}
          if [[ $TF_WORKSPACE == "prod" ]]; then
            unset VAULT_TOKEN
            export VAULT_ADDR=https://vault.prod.auto1.team
            export VAULT_TOKEN="$VAULT_TOKEN_PROD"
          elif [[ $TF_WORKSPACE == "qa" ]]; then
            export VAULT_ADDR=https://vault.qa.auto1.team
            export VAULT_TOKEN="$VAULT_TOKEN_QA"
          else
            unset VAULT_TOKEN
            export VAULT_ADDR=https://vault.prod.auto1.team
            export VAULT_TOKEN="$VAULT_TOKEN_PROD"
          fi

          export uuid=$(uuidgen)
          echo $uuid
          terraform init -reconfigure > /dev/null 2>&1
          echo "plan_path=/tmp/plan-$uuid" >> "$GITHUB_OUTPUT"
          terraform plan -no-color -out=/tmp/plan-$uuid
          terraform show -no-color/tmp/plan-$uuid | tee /tmp/plan-$uuid.txt > /dev/null 2>&1

        env:
          VAULT_TOKEN_QA: ${{ secrets.VAULT_TOKEN_QA }}
          VAULT_TOKEN_PROD: ${{ secrets.VAULT_TOKEN_PROD }}

        continue-on-error: true

      - name: Save Plan File as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.plan.outputs.plan_path }}
          path: ${{ steps.plan.outputs.plan_path }}

      - name: Comment on Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |

            const fs = require('fs');
            let data = fs.readFileSync("{{ steps.plan.outputs.plan_path }}.txt", 'utf8');
            const MAX_GITHUB_COMMENT_LENGTH = 65536;

            if (data.length > MAX_GITHUB_COMMENT_LENGTH) {
              data = "Please review the plan in github actions logs because it's too long."
            }

            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              body: '**Terraform Cmd:**\n' + '```'+ context.payload.comment.body + '```' + '\n\n**Terraform Plan:**\n```' + data + '```\n' + '\n**Link:** ' + "${{ steps.job_url.outputs.html_url }}#step:6:1"
            })
